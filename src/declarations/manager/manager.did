type MerchantConfig = record {
  token_allowed : vec TokenInfo;
  fee_to : principal;
  fee_rate : float32;
  order_check_duration : nat64;
  order_on_hold_duration : nat64;
};
type MerchantManageReport = record {
  report : vec record { nat64; text };
  timestamp : nat64;
};
type Result = variant { Ok : bool; Err : text };
type Result_1 = variant { Ok : nat64; Err : text };
type Result_2 = variant { Ok : MerchantConfig; Err : text };
type Result_3 = variant { Ok : principal; Err : text };
type Result_4 = variant { Ok; Err : text };
type TokenInfo = record { "principal" : principal; token_type : TokenType };
type TokenType = variant { ICRC1; DIP20; OTHER };
service : () -> {
  add_manager : (principal) -> (Result);
  create_merchant : (principal) -> (Result_1);
  get_merchant_by_id : (nat64) -> (opt principal) query;
  get_merchant_conf : (nat64) -> (Result_2);
  install_user_canister : () -> (Result_3);
  remove_manager : (principal) -> (Result);
  set_merchant_block : (nat64, bool) -> (Result);
  set_merchant_verified : (nat64, bool) -> (Result);
  update_all_merchant_allowed_tokens : () -> (MerchantManageReport);
  update_allowed_token_list : (vec principal, vec text) -> (Result_4);
  update_merchant_conf : (nat64, MerchantConfig) -> (Result_4);
  upload_wasm : (text, vec nat8) -> (Result_4);
}
